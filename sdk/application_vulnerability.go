package sdk

import "strings"

// VulnerabilityReport represent a vulnerability report
type VulnerabilityReport struct {
	Summary         map[string]int64 `json:"summary"`
	Vulnerabilities []Vulnerability  `json:"vulnerabilities"`
}

// Vulnerability represents vulnerabilities on an application
type Vulnerability struct {
	ID                int64  `json:"id" db:"id"`
	ApplicationID     int64  `json:"application_id" db:"application_id"`
	WorkflowID        int64  `json:"workflow_id" db:"workflow_id"`
	WorkflowRunID     int64  `json:"workflow_run_id" db:"workflow_run_id"`
	WorkflowNodeRunID int64  `json:"workflow_node_run_id" db:"workflow_node_run_id"`
	Title             string `json:"title" db:"title"`
	Description       string `json:"description" db:"description"`
	CVE               string `json:"cve" db:"cve"`
	Link              string `json:"link" db:"link"`
	Component         string `json:"component" db:"component"`
	Version           string `json:"version" db:"version"`
	Origin            string `json:"origin" db:"origin"`
	Severity          string `json:"severity" db:"severity"`
	FixIn             string `json:"fix_in" db:"fix_in"`
	Ignored           bool   `json:"ignored" db:"ignored"`
}

const (
	SeverityUnknown    string = "unknown"
	SeverityNegligible string = "negligible"
	SeverityLow        string = "low"
	SeverityMedium     string = "medium"
	SeverityHigh       string = "high"
	SeverityCritical   string = "critical"
	SeverityDefcon1    string = "defcon1"
)

// ToVulnerabilitySeverity converts string to good severity name
func ToVulnerabilitySeverity(s string) string {
	s = strings.ToLower(s)
	switch s {
	case SeverityNegligible, SeverityLow, SeverityMedium, SeverityHigh, SeverityCritical, SeverityDefcon1:
		return s
	case "Moderate":
		return SeverityMedium
	default:
		return SeverityUnknown
	}
}
